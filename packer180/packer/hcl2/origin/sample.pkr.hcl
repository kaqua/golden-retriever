
variable "instance_type" {
  type    = string
  default = "t3.small"
}

variable "profile" {
  type    = string
  default = "default"
}

variable "region" {
  type    = string
  default = "ap-northeast-1"
}

variable "service_name" {
  type    = string
  default = "sample"
}

variable "ssh_interface" {
  type    = string
  default = "private_ip"
}

data "amazon-ami" "autogenerated_1" {
  filters = {
    name = "amzn2-ami-hvm-*-x86_64-gp2"
  }
  most_recent = true
  owners      = ["amazon"]
  profile     = "${var.profile}"
  region      = "${var.region}"
}
# The "legacy_isotime" function has been provided for backwards compatability, but we recommend switching to the timestamp and formatdate functions.

source "amazon-ebs" "autogenerated_1" {
  ami_name      = "${var.service_name}-${var.environment}-${legacy_isotime("20060102T0304Z")}"
  instance_type = "${var.instance_type}"
  profile       = "${var.profile}"
  region        = "${var.region}"
  run_tags = {
    Name = "Packer Build of ${var.service_name}-${var.environment}"
  }
  security_group_ids = "${var.security_group_ids}"
  source_ami         = "${data.amazon-ami.autogenerated_1.id}"
  ssh_interface      = "${var.ssh_interface}"
  ssh_timeout        = "5m"
  ssh_username       = "ec2-user"
  subnet_id          = "${var.subnet_id}"
  tags = {
    Amazon_AMI_Management_Identifier = "${var.service_name}-${var.environment}"
    Environment                      = "${var.environment}"
    Name                             = "${var.service_name}-${var.environment}"
  }
  vpc_id = "${var.vpc_id}"
}

build {
  sources = ["source.amazon-ebs.autogenerated_1"]

  provisioner "chef-solo" {
    chef_environment  = "common"
    cookbook_paths    = "../chef/cookbooks"
    environments_path = "../chef/environments"
    roles_path        = "../chef/roles"
    run_list          = ["role[${var.environment}]"]
  }

  provisioner "shell" {
    inline = ["echo sample > /tmp/packer_build.log"]
  }

  post-processor "amazon-ami-management" {
    identifier    = "${var.service_name}-${var.environment}"
    keep_releases = "5"
    regions       = ["${var.region}"]
  }
}
